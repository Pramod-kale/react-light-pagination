{"version":3,"file":"index.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/TestComponent/TestComponent.tsx","../src/components/Pagination/Pagination.tsx"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react'\n\nimport './TestComponent.scss'\n\ntype Props = {\n    theme: string;\n};\n\nconst TestComponent = (props: Props) => {\n    return (\n        <div>\n            TestComponent\n            {props.theme}\n        </div>\n    )\n}\n\nexport default TestComponent","// import library components\nimport React, { useEffect, useMemo, useState } from 'react'\n\n// import styles file\nimport './Pagination.scss'\n\n// import custom components\n\n\n// types definition\ntype Props = {\n    nextClickHandler?: (offset: number | string) => void;\n    previousClickHandler?: (offset: number | string) => void;\n    totalNumberOfData: number;\n    perPage: number;\n    currentPage?: number;\n    pageClickHandler?: (offset: number | string) => void;\n    classNames?: {\n        container?: string;\n        previousButton?: string;\n        nextButton?: string;\n        pageContainer?: string;\n        pageButton?: string;\n        pageActiveButton?: string;\n        buttons?: string;\n    };\n    components?: {\n        previousButton?: React.ReactNode;\n        nextButton?: React.ReactNode;\n        pageButton?: React.ReactNode;\n    };\n    inlineStyles?: {\n        container?: React.CSSProperties;\n        previousButton?: React.CSSProperties;\n        nextButton?: React.CSSProperties;\n        pageContainer?: React.CSSProperties;\n        pageButton?: React.CSSProperties;\n        pageActiveButton?: React.CSSProperties;\n        buttons?: React.CSSProperties;\n    }\n}\n\nconst Pagination = (props: Props) => {\n\n    const { perPage,\n        currentPage,\n        nextClickHandler,\n        previousClickHandler,\n        pageClickHandler,\n        totalNumberOfData = 0,\n        classNames,\n        components,\n        inlineStyles,\n    } = props\n\n\n    const [currentPageState, setCurrentPageState] = useState(currentPage || 1)\n    const totalPages: number = Math.ceil(totalNumberOfData / perPage);\n\n\n    const pageNavigateHandler = (type: 'back' | 'forward' | 'page', pageNumber: number) => {\n        if (Number.isNaN(pageNumber)) return\n\n        if (type === 'back') {\n            if (currentPageState > 1) {\n                setCurrentPageState(prev => prev - pageNumber)\n                previousClickHandler?.(currentPageState)\n            }\n        } else if (type === 'forward') {\n            if (currentPageState < totalPages) {\n                setCurrentPageState(prev => prev + pageNumber)\n                nextClickHandler?.(currentPageState)\n            }\n        } else if (type === 'page') {\n            setCurrentPageState(prev => pageNumber)\n            pageClickHandler?.(currentPageState)\n        }\n    }\n\n    const getPaginationNumbers = (currentPage: number, totalPages: number): (number | string)[] => {\n        const pageNumbers: (number | string)[] = [];\n\n        for (let i = 1; i <= totalPages; i++) {\n            pageNumbers.push(i);\n        }\n\n        const startIndex = Math.max(currentPage - 2, 1);\n        const endIndex = Math.min(currentPage + 1, totalPages);\n\n        let showLeftDots = startIndex > 2;\n        let showRightDots = endIndex < (totalPages - 2);\n\n        if (!showLeftDots && showRightDots) {\n            return [...pageNumbers.slice(0, 7), '...', totalPages];\n        }\n\n        if (showLeftDots && !showRightDots) {\n            return [1, '...', ...pageNumbers.slice(totalPages - 7)];\n        }\n\n        if (showLeftDots && showRightDots) {\n            return [1, '...', ...pageNumbers.slice(startIndex - 1, endIndex + 1), '...', totalPages];\n        }\n\n        return pageNumbers;\n    }\n\n    const pageNumberToRender = useMemo(() => getPaginationNumbers(currentPageState, totalPages), [currentPageState, totalPages])\n\n    useEffect(() => {\n        if (currentPage && currentPage !== currentPageState && currentPage <= totalPages && currentPage >= 1) {\n            setCurrentPageState(currentPage)\n        }\n    }, [currentPage])\n\n    return (\n        <div\n            id='ReactLightPagination'\n            className={`pagination-container ${classNames?.container}'`}\n            style={inlineStyles?.container}\n        >\n\n            <button\n                className={`previous-btn block ${classNames?.previousButton} ${classNames?.buttons}`}\n                onClick={() => pageNavigateHandler('back', 1)}\n                style={{ ...inlineStyles?.previousButton, ...inlineStyles?.buttons }}\n            >\n                {components?.previousButton || 'Previous'}\n            </button>\n\n            <div\n                className={`page-numbers-container ${classNames?.pageContainer}`}\n                style={inlineStyles?.pageContainer}\n            >\n\n                {\n                    pageNumberToRender?.map((item, index) => {\n                        return (\n                            <button\n                                onClick={() => pageNavigateHandler('page', Number(item))}\n                                key={`${item}${index}`}\n                                className={`block page-number ${item === currentPageState && `active ${classNames?.pageActiveButton}`}  ${classNames?.buttons} ${classNames?.pageButton} `}\n                                style={{ ...inlineStyles?.pageButton, ...inlineStyles?.buttons, ...(item === currentPageState ? inlineStyles?.pageActiveButton : {}) }}\n                            >\n                                {components?.pageButton || item}\n                            </button>\n                        )\n                    })\n                }\n\n            </div>\n\n            <button\n                className={`block next-btn ${classNames?.nextButton} ${classNames?.buttons} `}\n                onClick={() => pageNavigateHandler('forward', 1)}\n                style={{ ...inlineStyles?.nextButton, ...inlineStyles?.buttons }}\n            >\n                {components?.nextButton || 'Next'}\n            </button>\n        </div >\n    )\n}\n\nexport default Pagination\n\n\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","props","perPage","currentPage","nextClickHandler","previousClickHandler","pageClickHandler","_a","totalNumberOfData","classNames","components","inlineStyles","_b","useState","currentPageState","setCurrentPageState","totalPages","Math","ceil","pageNavigateHandler","pageNumber","Number","isNaN","prev","pageNumberToRender","useMemo","pageNumbers","i","push","startIndex","max","endIndex","min","showLeftDots","showRightDots","__spreadArray","slice","getPaginationNumbers","useEffect","React","id","className","concat","container","previousButton","buttons","onClick","__assign","pageContainer","map","item","index","key","pageActiveButton","pageButton","nextButton","theme"],"mappings":"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","x_google_ignoreList":[0]}